---
import { projects } from '../data/projects';

const featuredProjects = projects.filter(project => project.featured);
const otherProjects = projects.filter(project => !project.featured);
---

<section id="projects" class="py-20 bg-gray-800/50">
  <div class="container mx-auto px-6">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold mb-6">
        <span class="bg-gradient-to-r from-purple-400 to-cyan-400 bg-clip-text text-transparent">
          Mis Proyectos
        </span>
      </h2>
      <div class="w-24 h-1 bg-gradient-to-r from-purple-400 to-cyan-400 mx-auto mb-8"></div>
      <p class="text-gray-300 text-lg max-w-2xl mx-auto">
        Algunos de los proyectos en los que he trabajado, desde aplicaciones web hasta plataformas completas
      </p>
    </div>

    <!-- Featured Projects -->
    <div class="mb-16">
      <h3 class="text-2xl font-semibold mb-8 text-center text-purple-400">Proyectos Destacados</h3>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {featuredProjects.map((project) => (
          <div class="bg-gray-900/50 rounded-2xl overflow-hidden backdrop-blur-sm border border-gray-700/50 hover:border-purple-500/50 transition-all duration-300 group hover:scale-105">
            <!-- Image with click to expand functionality -->
            <div class="h-48 bg-gradient-to-br from-purple-500/20 to-cyan-500/20 relative overflow-hidden cursor-pointer group/image">
              <div class="absolute inset-0 flex items-center justify-center">
                <img 
                  src={project.imagePreview || project.image} 
                  alt={project.title} 
                  class="w-full h-full object-cover transition-transform duration-300 group-hover/image:scale-110 project-image"
                  data-title={project.title}
                  data-category={project.category}
                  data-image-full={project.imageFull || project.image}
                  data-url={project.url}
                />
              </div>
              
              <!-- Overlay con efecto hover -->
              <div class="absolute inset-0 bg-black/0 group-hover/image:bg-black/20 transition-all duration-300 flex items-center justify-center">
                <div class="opacity-0 group-hover/image:opacity-100 transition-opacity duration-300 bg-black/50 rounded-full p-3">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"></path>
                  </svg>
                </div>
              </div>
              
              <!-- Categoría badge -->
              <div class="absolute top-4 right-4">
                <span class="bg-purple-500 text-white px-3 py-1 rounded-full text-sm">
                  {project.category}
                </span>
              </div>
              
              <!-- Indicador de click -->
              <div class="absolute bottom-4 left-4 opacity-0 group-hover/image:opacity-100 transition-opacity duration-300">
                <span class="bg-black/70 text-white px-2 py-1 rounded text-xs flex items-center">
                  <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                  </svg>
                  Ver imagen completa
                </span>
              </div>
            </div>
            
            <div class="p-6">
              <h4 class="text-xl font-semibold mb-3 text-white group-hover:text-purple-400 transition-colors duration-300">
                {project.title}
              </h4>
              <p class="text-gray-300 mb-4 leading-relaxed">
                {project.description}
              </p>
              
              <!-- Technologies -->
              <div class="flex flex-wrap gap-2 mb-4">
                {project.technologies.map((tech) => (
                  <span class="bg-gray-700/50 text-cyan-400 px-2 py-1 rounded text-sm">
                    {tech}
                  </span>
                ))}
              </div>
              
              <!-- Links -->
              <div class="flex gap-3">
                <a 
                  href={project.url} 
                  target="_blank"
                  class="flex items-center text-purple-400 hover:text-purple-300 transition-colors duration-300"
                >
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                  Ver Proyecto
                </a>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>

    <!-- Other Projects -->
    <div>
      <h3 class="text-2xl font-semibold mb-8 text-center text-cyan-400">Otros Proyectos</h3>
      <div class="grid md:grid-cols-2 gap-6">
        {otherProjects.map((project) => (
          <div class="bg-gray-900/30 p-6 rounded-xl border border-gray-700/50 hover:border-cyan-500/50 transition-all duration-300 hover:bg-gray-800/50">
            <div class="flex items-start justify-between mb-4">
              <h4 class="text-lg font-semibold text-white">{project.title}</h4>
              <span class="bg-cyan-500/20 text-cyan-400 px-2 py-1 rounded text-sm">
                {project.category}
              </span>
            </div>
            
            <p class="text-gray-300 mb-4">
              {project.description}
            </p>
            
            <!-- Technologies -->
            <div class="flex flex-wrap gap-2 mb-4">
              {project.technologies.map((tech) => (
                <span class="bg-gray-700/50 text-gray-300 px-2 py-1 rounded text-sm">
                  {tech}
                </span>
              ))}
            </div>
            
            <!-- Link -->
            <a 
              href={project.url} 
              target="_blank"
              class="inline-flex items-center text-cyan-400 hover:text-cyan-300 transition-colors duration-300"
            >
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
              Ver Proyecto
            </a>
          </div>
        ))}
      </div>
    </div>

    <!-- Call to Action -->
    <div class="text-center mt-16">
      <div class="bg-gradient-to-r from-purple-500/10 to-cyan-500/10 p-8 rounded-2xl border border-gray-700/50">
        <h3 class="text-2xl font-semibold mb-4 text-white">¿Tienes un proyecto en mente?</h3>
        <p class="text-gray-300 mb-6 max-w-2xl mx-auto">
          Estoy siempre abierto a discutir nuevas oportunidades y proyectos interesantes. 
          ¡Hablemos sobre cómo puedo ayudarte!
        </p>
        <a 
          href="#contact" 
          class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-500 to-cyan-500 hover:from-purple-600 hover:to-cyan-600 text-white font-semibold rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
          </svg>
          Conversemos
        </a>
      </div>
    </div>
  </div>
</section>

<!-- Modal de imagen mejorado -->
<div 
  id="imageModal" 
  class="fixed inset-0 bg-black/90 backdrop-blur-sm z-[70] opacity-0 pointer-events-none transition-all duration-300"
>
  <!-- Contenedor del modal con área clickeable -->
  <div class="w-full h-full flex items-center justify-center p-4" id="modalBackground">
    <!-- Botón cerrar -->
    <button
      id="closeImageModal"
      class="absolute top-6 right-6 text-white/80 hover:text-white bg-black/50 hover:bg-black/70 p-3 rounded-full transition-all duration-200 z-10 backdrop-blur-sm"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Contenido del modal -->
    <div class="max-w-7xl max-h-[95vh] w-full bg-gray-900/95 rounded-xl border border-gray-700/50 overflow-hidden backdrop-blur-sm transform scale-75 transition-transform duration-300" id="modalContent">
      <!-- Header -->
      <div class="p-6 border-b border-gray-700/50">
        <h3 id="modalTitle" class="text-2xl font-semibold text-white mb-2"></h3>
        <p id="modalCategory" class="text-purple-400 text-base"></p>
      </div>

      <!-- Imagen -->
      <div class="relative flex items-center justify-center bg-gray-800/50 min-h-[500px] max-h-[75vh]">
        <img
          id="modalImg"
          src=""
          alt=""
          class="max-w-full max-h-full object-contain opacity-0 transition-opacity duration-300 rounded-lg"
        />
        <!-- Loading -->
        <div id="modalLoader" class="absolute inset-0 flex items-center justify-center">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-400"></div>
        </div>
      </div>

      <!-- Footer -->
      <div class="p-6 border-t border-gray-700/50 flex items-center justify-between">
        <span class="text-gray-400 text-base">Haz clic fuera del contenido para cerrar o presiona ESC</span>
        <a
          id="modalLink"
          href=""
          target="_blank"
          class="flex items-center px-6 py-3 bg-purple-500 hover:bg-purple-600 text-white text-base rounded-lg transition-colors duration-200 font-medium"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
          Ver Proyecto Completo
        </a>
      </div>
    </div>
  </div>
</div>

<script is:inline>
// Modal de imagen - JavaScript puro y limpio
(function() {
  console.log('🚀 Cargando modal de imágenes...');
  
  function initImageModal() {
    // Obtener elementos
    const modal = document.getElementById('imageModal');
    const modalContent = document.getElementById('modalContent');
    const modalImg = document.getElementById('modalImg');
    const modalTitle = document.getElementById('modalTitle');
    const modalCategory = document.getElementById('modalCategory');
    const modalLink = document.getElementById('modalLink');
    const modalLoader = document.getElementById('modalLoader');
    const closeBtn = document.getElementById('closeImageModal');

    if (!modal) {
      console.error('❌ Modal no encontrado');
      return;
    }

    // Función para abrir modal
    window.openImageModal = function(data) {
      console.log('📷 Abriendo modal:', data.title);
      
      // Actualizar contenido
      modalTitle.textContent = data.title;
      modalCategory.textContent = data.category;
      modalLink.href = data.url;
      
      // Mostrar loader
      modalLoader.style.display = 'flex';
      modalImg.style.opacity = '0';
      
      // Cargar imagen
      modalImg.src = data.imageFull;
      modalImg.alt = data.title;
      
      // Mostrar modal con animación
      modal.classList.remove('pointer-events-none');
      modal.style.opacity = '1';
      modalContent.style.transform = 'scale(1)';
      
      // Bloquear scroll del body
      document.body.style.overflow = 'hidden';
    };

    // Función para cerrar modal
    window.closeImageModal = function() {
      console.log('🔒 Cerrando modal...');
      modal.style.opacity = '0';
      modalContent.style.transform = 'scale(0.75)';
      
      setTimeout(() => {
        modal.classList.add('pointer-events-none');
        document.body.style.overflow = 'auto';
      }, 300);
    };

    // Event listeners del modal
    closeBtn.addEventListener('click', window.closeImageModal);
    
    // Cerrar al hacer click en el fondo del modal (mejorado)
    const modalBackground = document.getElementById('modalBackground');
    if (modalBackground) {
      modalBackground.addEventListener('click', function(e) {
        // Cerrar si se hace click en el fondo, no en el contenido
        if (e.target === modalBackground || e.target === modal) {
          window.closeImageModal();
        }
      });
    }

    // Cerrar también al hacer click directamente en el modal
    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        window.closeImageModal();
      }
    });

    // Prevenir que el contenido del modal cierre el modal al hacer click
    modalContent.addEventListener('click', function(e) {
      e.stopPropagation();
    });

    // Cerrar con tecla ESC
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && modal.style.opacity === '1') {
        window.closeImageModal();
      }
    });

    // Cuando la imagen se carga
    modalImg.addEventListener('load', function() {
      modalLoader.style.display = 'none';
      modalImg.style.opacity = '1';
    });

    modalImg.addEventListener('error', function() {
      console.error('❌ Error cargando imagen');
      modalLoader.innerHTML = '<p class="text-red-400 text-center">Error cargando imagen</p>';
    });

    // Configurar click en las imágenes de proyecto
    function setupImageClicks() {
      const allImages = document.querySelectorAll('#projects img');
      console.log(`🖼️ Configurando ${allImages.length} imágenes`);
      
      allImages.forEach(function(img) {
        // Estilo del cursor
        img.style.cursor = 'pointer';
        img.style.position = 'relative';
        img.style.zIndex = '10';
        
        // Evento click directo
        img.onclick = function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const data = {
            title: img.getAttribute('data-title') || 'Proyecto',
            category: img.getAttribute('data-category') || 'Categoría',
            imageFull: img.getAttribute('data-image-full') || img.src,
            url: img.getAttribute('data-url') || '#'
          };
          
          window.openImageModal(data);
        };
        
        // También click en el contenedor
        const container = img.closest('.h-48');
        if (container) {
          container.style.cursor = 'pointer';
          container.onclick = function(e) {
            if (e.target === container || e.target === img) {
              e.preventDefault();
              e.stopPropagation();
              img.click();
            }
          };
        }
      });
    }

    // Ejecutar configuración
    setupImageClicks();
    console.log('✅ Modal configurado correctamente');
  }

  // Inicializar cuando el DOM esté listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initImageModal);
  } else {
    initImageModal();
  }
})();
</script>

<style>
  /* Animaciones suaves para el modal */
  #imageModal {
    transition: opacity 0.3s ease;
  }
  
  #modalContent {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  #modalImg {
    transition: opacity 0.3s ease;
  }

  /* Estilo mejorado para el botón cerrar */
  #closeImageModal:hover {
    transform: scale(1.1);
  }
</style>
