---
// Modal component for displaying full-size project images
---

<!-- Modal de imagen -->
<div
  id="image-modal"
  class="fixed inset-0 bg-black/80 backdrop-blur-sm z-[70] hidden items-center justify-center p-4"
  style="display: none;"
>
  <!-- Contenedor del modal -->
  <div class="relative max-w-6xl max-h-[90vh] w-full">
    <!-- Botón cerrar -->
    <button
      id="close-image-modal"
      class="absolute -top-12 right-0 text-white/80 hover:text-white bg-black/50 hover:bg-black/70 p-2 rounded-full transition-all duration-200 z-10"
      title="Cerrar (Esc)"
    >
      <svg
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Contenido del modal -->
    <div
      class="bg-gray-900/95 rounded-xl border border-gray-700/50 overflow-hidden backdrop-blur-sm"
    >
      <!-- Header con información del proyecto -->
      <div class="p-4 border-b border-gray-700/50">
        <h3
          id="modal-project-title"
          class="text-xl font-semibold text-white mb-1"
        >
        </h3>
        <p id="modal-project-category" class="text-purple-400 text-sm"></p>
      </div>

      <!-- Imagen -->
      <div class="relative flex items-center justify-center bg-gray-800/50">
        <img
          id="modal-image"
          src=""
          alt=""
          class="max-w-full max-h-[70vh] object-contain"
          style="max-height: 70vh;"
        />
        <!-- Loading spinner -->
        <div
          id="modal-loading"
          class="absolute inset-0 flex items-center justify-center bg-gray-800/50"
        >
          <div
            class="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-400"
          >
          </div>
        </div>
      </div>

      <!-- Footer con acciones -->
      <div
        class="p-4 border-t border-gray-700/50 flex items-center justify-between"
      >
        <!-- Información adicional -->
        <div class="flex items-center space-x-4">
          <span class="text-gray-400 text-sm"
            >Haz clic fuera de la imagen para cerrar</span
          >
        </div>

        <!-- Botones de acción -->
        <div class="flex items-center space-x-3">
          <!-- Botón ver proyecto -->
          <a
            id="modal-project-link"
            href=""
            target="_blank"
            class="hidden items-center px-4 py-2 bg-purple-500 hover:bg-purple-600 text-white text-sm rounded-lg transition-colors duration-200"
          >
            <svg
              class="w-4 h-4 mr-2"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
              ></path>
            </svg>
            Ver Proyecto
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Animaciones para el modal */
  @keyframes modal-fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes modal-scale-in {
    0% {
      opacity: 0;
      transform: scale(0.9) translateY(20px);
    }
    100% {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  .modal-show {
    animation: modal-fade-in 0.2s ease-out;
  }

  .modal-content-show {
    animation: modal-scale-in 0.3s ease-out;
  }

  /* Prevenir scroll del body cuando el modal está abierto */
  body.modal-open {
    overflow: hidden;
  }
</style>

<script>
  // Variables globales del modal
  let imageModal: HTMLElement | null = null;
  let modalImage: HTMLImageElement | null = null;
  let modalLoading: HTMLElement | null = null;
  let modalProjectTitle: HTMLElement | null = null;
  let modalProjectCategory: HTMLElement | null = null;
  let modalProjectLink: HTMLAnchorElement | null = null;
  let closeModalBtn: HTMLElement | null = null;

  // Inicializar el modal cuando el DOM esté listo
  function initImageModal() {
    // Obtener elementos del DOM
    imageModal = document.getElementById('image-modal');
    modalImage = document.getElementById('modal-image') as HTMLImageElement;
    modalLoading = document.getElementById('modal-loading');
    modalProjectTitle = document.getElementById('modal-project-title');
    modalProjectCategory = document.getElementById('modal-project-category');
    modalProjectLink = document.getElementById(
      'modal-project-link'
    ) as HTMLAnchorElement;
    closeModalBtn = document.getElementById('close-image-modal');

    if (!imageModal) return;

    // Event listeners
    setupModalEventListeners();

    // Hacer la función disponible globalmente
    (window as any).openImageModal = openImageModal;
  }

  function setupModalEventListeners() {
    if (!imageModal || !closeModalBtn || !modalImage) return;

    // Cerrar modal al hacer clic en el botón cerrar
    closeModalBtn.addEventListener('click', closeImageModal);

    // Cerrar modal al hacer clic fuera de la imagen
    imageModal.addEventListener('click', e => {
      if (e.target === imageModal) {
        closeImageModal();
      }
    });

    // Cerrar modal con la tecla Escape
    document.addEventListener('keydown', e => {
      if (e.key === 'Escape' && !imageModal!.classList.contains('hidden')) {
        closeImageModal();
      }
    });

    // Manejar carga de imagen
    modalImage.addEventListener('load', () => {
      if (modalLoading) {
        modalLoading.classList.add('hidden');
      }
    });

    modalImage.addEventListener('error', () => {
      if (modalLoading) {
        modalLoading.innerHTML =
          '<p class="text-red-400">Error cargando la imagen</p>';
      }
    });
  }

  function openImageModal(projectData: {
    title: string;
    category: string;
    imageFull: string;
    url: string;
  }) {
    if (!imageModal || !modalImage || !modalLoading) return;

    // Actualizar contenido del modal
    if (modalProjectTitle) modalProjectTitle.textContent = projectData.title;
    if (modalProjectCategory)
      modalProjectCategory.textContent = projectData.category;

    // Configurar link del proyecto
    if (modalProjectLink) {
      modalProjectLink.href = projectData.url;
      modalProjectLink.classList.remove('hidden');
      modalProjectLink.classList.add('flex');
    }

    // Mostrar loading y ocultar imagen
    modalLoading.classList.remove('hidden');
    modalImage.style.opacity = '0';

    // Cargar nueva imagen
    modalImage.src = projectData.imageFull;
    modalImage.alt = projectData.title;

    // Mostrar modal
    imageModal.classList.remove('hidden');
    imageModal.style.display = 'flex';
    imageModal.classList.add('modal-show');

    // Agregar clase al body para prevenir scroll
    document.body.classList.add('modal-open');

    // Fade in de la imagen cuando cargue
    modalImage.addEventListener('load', function imageLoadHandler() {
      modalImage!.style.opacity = '1';
      modalImage!.style.transition = 'opacity 0.3s ease';
      modalImage!.removeEventListener('load', imageLoadHandler);
    });
  }

  function closeImageModal() {
    if (!imageModal) return;

    // Ocultar modal
    imageModal.classList.add('hidden');
    imageModal.style.display = 'none';
    imageModal.classList.remove('modal-show');

    // Remover clase del body
    document.body.classList.remove('modal-open');

    // Limpiar imagen
    if (modalImage) {
      modalImage.src = '';
      modalImage.style.opacity = '0';
    }
  }

  // Inicializar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', initImageModal);
</script>
