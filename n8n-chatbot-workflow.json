{
  "name": "Chatbot Portfolio Wilson",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chatbot",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-start",
      "name": "Webhook Chatbot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [140, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForAllItems",
        "jsCode": "// Procesar el mensaje del usuario y preparar contexto\nconst webhookData = $input.all()[0].json;\nconst userMessage = webhookData.message;\nconst userId = webhookData.userId;\nconst messageHistory = webhookData.history || [];\n\n// Contexto sobre Wilson (datos de tu portafolio)\nconst wilsonContext = `\nSoy Wilson Del Canto, un desarrollador fullstack especializado en:\n\n🚀 TECNOLOGÍAS:\n- Frontend: React, Next.js, Astro, TypeScript, Tailwind CSS\n- Backend: Node.js, Express, Strapi CMS, MongoDB\n- Móvil: React Native\n- Bases de datos: MongoDB, PostgreSQL\n- DevOps: Docker, Git, AWS\n\n💼 EXPERIENCIA:\n- Desarrollo de aplicaciones web modernas y responsivas\n- Integración de APIs y servicios terceros\n- Arquitectura de aplicaciones escalables\n- Automatización con N8N\n\n🎯 PROYECTOS DESTACADOS:\n- Portafolio personal con Astro y Tailwind\n- Aplicaciones React Native multiplataforma\n- Sistemas backend con Strapi CMS\n- Integraciones con servicios de terceros\n\n📧 CONTACTO:\n- Email: wdelcanto@gmail.com\n- GitHub: github.com/wdelcant\n- LinkedIn: linkedin.com/in/wilson-del-canto\n\nEstoy disponible para proyectos freelance y oportunidades laborales.\n`;\n\n// Determinar tipo de consulta\nlet queryType = 'general';\nif (userMessage.toLowerCase().includes('experiencia') || userMessage.toLowerCase().includes('trabajo')) {\n  queryType = 'experience';\n} else if (userMessage.toLowerCase().includes('tecnolog') || userMessage.toLowerCase().includes('skill') || userMessage.toLowerCase().includes('habilidad')) {\n  queryType = 'skills';\n} else if (userMessage.toLowerCase().includes('proyecto')) {\n  queryType = 'projects';\n} else if (userMessage.toLowerCase().includes('contacto') || userMessage.toLowerCase().includes('email') || userMessage.toLowerCase().includes('contratar')) {\n  queryType = 'contact';\n}\n\n// Preparar prompt para OpenAI\nconst systemPrompt = `Eres el asistente personal de Wilson Del Canto. Responde de manera amigable, profesional y concisa. \nUsa la información proporcionada para responder preguntas sobre Wilson.\nSi no tienes información específica, dirígelos a contactarlo directamente.\nMantén las respuestas en español y usa emojis cuando sea apropiado.\n\nContexto sobre Wilson:\n${wilsonContext}`;\n\nconst userPrompt = `Consulta del usuario: ${userMessage}\nTipo de consulta: ${queryType}`;\n\nreturn {\n  json: {\n    systemPrompt,\n    userPrompt,\n    originalMessage: userMessage,\n    userId,\n    queryType,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "process-message",
      "name": "Procesar Mensaje",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [360, 300]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "complete",
        "prompt": {
          "messages": [
            {
              "role": "system",
              "content": "={{ $json.systemPrompt }}"
            },
            {
              "role": "user",
              "content": "={{ $json.userPrompt }}"
            }
          ]
        },
        "maxTokens": 150,
        "temperature": 0.7,
        "topP": 1,
        "presencePenalty": 0,
        "frequencyPenalty": 0
      },
      "id": "openai-response",
      "name": "OpenAI Chat",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1.1,
      "position": [580, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI Credentials"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForAllItems",
        "jsCode": "// Formatear la respuesta de OpenAI\nconst openAiResponse = $input.all()[0].json;\nconst originalData = $input.all()[1].json;\n\n// Extraer texto de respuesta\nlet responseText = '';\nif (openAiResponse.choices && openAiResponse.choices.length > 0) {\n  responseText = openAiResponse.choices[0].message.content.trim();\n} else {\n  responseText = 'Lo siento, no pude procesar tu consulta en este momento. ¿Podrías contactarme directamente a wdelcanto@gmail.com?';\n}\n\n// Agregar call-to-action según el tipo de consulta\nif (originalData.queryType === 'contact') {\n  responseText += '\\n\\n📧 Email: wdelcanto@gmail.com\\n💼 LinkedIn: linkedin.com/in/wilson-del-canto';\n} else if (originalData.queryType === 'projects') {\n  responseText += '\\n\\n🔗 Puedes ver más proyectos en mi GitHub o contactarme para detalles específicos.';\n}\n\nreturn {\n  json: {\n    response: responseText,\n    userId: originalData.userId,\n    originalMessage: originalData.originalMessage,\n    queryType: originalData.queryType,\n    timestamp: new Date().toISOString(),\n    processed: true\n  }\n};"
      },
      "id": "format-response",
      "name": "Formatear Respuesta",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 300]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": "YOUR_GOOGLE_SHEET_ID",
        "sheetName": "ChatLogs",
        "columns": {
          "mappingMode": "defineInNode",
          "value": {
            "Timestamp": "={{ $json.timestamp }}",
            "UserID": "={{ $json.userId }}",
            "Message": "={{ $json.originalMessage }}",
            "Response": "={{ $json.response }}",
            "QueryType": "={{ $json.queryType }}"
          }
        },
        "options": {}
      },
      "id": "log-conversation",
      "name": "Guardar Conversación",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [800, 480],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "google-sheets-credentials",
          "name": "Google Sheets Credentials"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, GET, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type"
              }
            ]
          }
        }
      },
      "id": "webhook-response",
      "name": "Respuesta Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1020, 300]
    }
  ],
  "connections": {
    "Webhook Chatbot": {
      "main": [
        [
          {
            "node": "Procesar Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Mensaje": {
      "main": [
        [
          {
            "node": "OpenAI Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat": {
      "main": [
        [
          {
            "node": "Formatear Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatear Respuesta": {
      "main": [
        [
          {
            "node": "Respuesta Webhook",
            "type": "main",
            "index": 0
          },
          {
            "node": "Guardar Conversación",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": ""
  },
  "staticData": null,
  "tags": [
    {
      "name": "chatbot",
      "id": "chatbot-tag"
    },
    {
      "name": "portfolio",
      "id": "portfolio-tag"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-19T00:00:00.000Z",
  "versionId": "1"
}
